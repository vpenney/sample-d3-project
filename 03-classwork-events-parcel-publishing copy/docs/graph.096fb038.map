{"version":3,"sources":["graph.js"],"names":["margin","width","left","right","height","top","bottom","svg","d3","select","append","attr","xPositionScale","scaleLinear","domain","range","yPositionScale","colorScale","scaleOrdinal","ready","datapoints","log","selectAll","data","enter","d","gdp_per_capita","life_expectancy","continent","on","i","nodes","text","country","style","yAxis","axisLeft","tickSize","ticks","call","lower","remove","xAxis","axisBottom","csv","require","then"],"mappings":";;;AACA,IAAIA,EAAS,CACN,IAAA,EACE,MAAA,GACC,OAAA,GACF,KAAA,IAGJC,EAAQ,IAAMD,EAAOE,KAAOF,EAAOG,MACnCC,EAAS,IAAMJ,EAAOK,IAAML,EAAOM,OAGnCC,EAAMC,GACPC,OAAO,UACPC,OAAO,OACPC,KAAK,QAASV,EAAQD,EAAOE,KAAOF,EAAOG,OAC3CQ,KAAK,SAAUP,EAASJ,EAAOK,IAAML,EAAOM,QAC5CI,OAAO,KACPC,KAAK,YAAa,aAAeX,EAAOE,KAAO,IAAMF,EAAOK,IAAM,KAG/DO,EAAiBJ,GACpBK,cACAC,OAAO,CAAC,EAAG,MACXC,MAAM,CAAC,EAAGd,IAEPe,EAAiBR,GACpBK,cACAC,OAAO,CAAC,GAAI,KACZC,MAAM,CAACX,EAAQ,IAEZa,EAAaT,GAChBU,eACAH,MAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,YAIjE,SAASI,EAAMC,GACLC,QAAAA,IAAI,UAAWD,GAGpBE,EAAAA,UAAU,UACVC,KAAKH,GACLI,QACAd,OAAO,UACPC,KAAK,IAAK,GACVA,KAAK,KAAM,SAAK,GACRC,OAAAA,EAAea,EAAEC,kBAEzBf,KAAK,KAAM,SAAK,GACRK,OAAAA,EAAeS,EAAEE,mBAEzBhB,KAAK,OAAQ,SAAK,GACVM,OAAAA,EAAWQ,EAAEG,aAIrBC,GAAG,YAAa,SAACJ,EAAGK,EAAGC,GACnBtB,GAAAA,OAAOsB,EAAMD,IAAInB,KAAK,OAAQ,SAC9BF,GAAAA,OAAO,SAASuB,KAAKP,EAAEQ,SACvBxB,GAAAA,OAAO,SAASuB,KAAKP,EAAEE,iBACvBlB,GAAAA,OAAO,QAAQuB,KAAKP,EAAEC,gBACtBjB,GAAAA,OAAO,SAASyB,MAAM,UAAW,WAErCL,GAAG,WAAY,SAASJ,GACpBhB,GAAAA,OAAO,MAAME,KAAK,OAAQM,EAAWQ,EAAEG,YACvCnB,GAAAA,OAAO,SAASyB,MAAM,UAAW,UAIpCC,IAAAA,EAAQ3B,GACT4B,SAASpB,GACTqB,UAAUpC,GACVqC,MAAM,GAEN5B,EAAAA,OAAO,KACPC,KAAK,QAAS,eACd4B,KAAKJ,GACLK,QAEA/B,GAAAA,OAAO,mBAAmBgC,SAEzBC,IAAAA,EAAQlC,GAAGmC,WAAW/B,GAAgB0B,MAAM,GAG7C5B,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBP,EAAS,KAC5CmC,KAAKG,GArDVlC,GAAGoC,IAAIC,QAAQ,oBAAoBC,KAAK3B","file":"graph.096fb038.map","sourceRoot":"..","sourcesContent":["/* global d3 */\nvar margin = {\n  top: 0,\n  right: 20,\n  bottom: 30,\n  left: 50\n}\n\nvar width = 500 - margin.left - margin.right\nvar height = 400 - margin.top - margin.bottom\n\n// You'll probably need to edit this one\nvar svg = d3\n  .select('#chart')\n  .append('svg')\n  .attr('width', width + margin.left + margin.right)\n  .attr('height', height + margin.top + margin.bottom)\n  .append('g')\n  .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n// Here are some scales for you\nconst xPositionScale = d3\n  .scaleLinear()\n  .domain([0, 80000])\n  .range([0, width])\n\nconst yPositionScale = d3\n  .scaleLinear()\n  .domain([30, 85])\n  .range([height, 0])\n\nconst colorScale = d3\n  .scaleOrdinal()\n  .range(['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae'])\n\nd3.csv(require('./countries.csv')).then(ready)\n\nfunction ready(datapoints) {\n  console.log('Data is', datapoints)\n\n  svg\n    .selectAll('circle')\n    .data(datapoints)\n    .enter()\n    .append('circle')\n    .attr('r', 4)\n    .attr('cx', d => {\n      return xPositionScale(d.gdp_per_capita)\n    })\n    .attr('cy', d => {\n      return yPositionScale(d.life_expectancy)\n    })\n    .attr('fill', d => {\n      return colorScale(d.continent)\n    })\n    // d3, give me the thing called name for this one\n    // point (not all, hence select v. selectAll)\n    .on('mouseover', (d, i, nodes) => {\n      d3.select(nodes[i]).attr('fill', 'black')\n      d3.select('#name').text(d.country)\n      d3.select('#life').text(d.life_expectancy)\n      d3.select('#GDP').text(d.gdp_per_capita)\n      d3.select('#info').style('display', 'block')\n    })\n    .on('mouseout', function(d) {\n      d3.select(this).attr('fill', colorScale(d.continent))\n      d3.select('#info').style('display', 'none')\n    })\n\n\n  var yAxis = d3\n    .axisLeft(yPositionScale)\n    .tickSize(-width)\n    .ticks(5)\n  svg\n    .append('g')\n    .attr('class', 'axis y-axis')\n    .call(yAxis)\n    .lower()\n\n  d3.select('.y-axis .domain').remove()\n\n  var xAxis = d3.axisBottom(xPositionScale).ticks(7)\n\n  svg\n    .append('g')\n    .attr('class', 'axis x-axis')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(xAxis)\n}\n"]}